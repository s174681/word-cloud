{
    "collab_server" : "",
    "contents" : "# Text of the books downloaded from:\n\n\nfunction(input, output, session) {\n  # Define a reactive expression for the document term matrix\n  terms <- reactive({\n    # Change when the \"update\" button is pressed...\n    input$update\n    # ...but not for anything else\n    isolate({\n      withProgress({\n        setProgress(message = \"Processing corpus...\")\n        getTermMatrix(input$selection)\n      })\n    })\n  })\n\n  # Make the wordcloud drawing predictable during a session\n  wordcloud_rep <- repeatable(wordcloud)\n  \n  output$plot <- renderPlot({\n    v <- terms()\n    wordcloud_rep(names(v), v, scale=c(4,0.5),\n                  min.freq = input$freq, max.words=input$max,\n                  colors=brewer.pal(8, \"Dark2\"))\n  })\n\n  \n  output$plot2 <- renderPlot({\n    v <- terms()\n    df<-data.frame(term=names(v),freq=v)\n    ggplot(df, aes(x=term,y=freq))+geom_bar(stat=\"identity\")+xlab(\"Terms\")+ylab(\"Count\")+coord_flip()+\n      labs(title=\"Frequency Distribution of Words/Terms in Plane Crash Data\", x=\"Words/Terms\", y=\"Count\")\n  })\n  korpus <- getDocumentsMatrix()\n  \n  # Analiza toksonomiczna - brak transformacji\n  output$plottf <- renderPlot({\n    dtm<-DocumentTermMatrix(korpus)\n    #dtm<-DocumentTermMatrix(korpus, control = list(bounds = input$freq))\n    d<-dist(dtm,method=\"euclidean\") #Tworzenie macierzy odległości \n    fit1<-hclust(d=d, method = \"ward.D\") \n    plot(fit1)\n  })\n  \n  TF<- function(){\n    dtm<-DocumentTermMatrix(korpus)\n    #dtm<-DocumentTermMatrix(korpus, control = list(bounds = input$freq))\n    d<-dist(dtm,method=\"euclidean\") #Tworzenie macierzy odległości \n    fit1<-hclust(d=d, method = \"ward.D\") \n    return(fit1)\n  }\n  \n  #Analiza tf-idf(ważone częstości logarytmiczne)\n  output$plotidf <- renderPlot({\n    dtm<-DocumentTermMatrix(korpus, control = list(weighting=weightTfIdf,bounds = list(global = c(input$max)))) #częstotliwość i ilość \n    d<-dist(dtm,method=\"euclidean\") #Tworzenie macierzy odległości \n    fit<-hclust(d=d, method = \"ward.D\") # \n    plot(fit)\n  })\n  \n  #Analiza LSA(ukrytych składowych sematycznych)\n  output$plotLSA <- renderPlot({\n    dtm<-DocumentTermMatrix(docsCorpus, control = list(weighting=weightTfIdf,bounds = list(global = c(2,6))))  \n    txt_mat <- as.textmatrix(t(as.matrix(dtm)))\n    #txt_mat <- dist(t(as.matrix(dtm)))\n    lsa_model <- lsa(txt_mat)\n    lsa_model$tk\n    lsa_model$dk\n    lsa_model&sk\n    s<-matrix(rep(0,16),4,4) #tworzenie macierzy o elementach zerowych\n    diag(s)<-lsa_model$sk\n    d<-dist(lsa_model$dk%*%s)\n    fit5<-hclust(d=d, method=\"ward.D\")\n    plot(fit5)\n    #t_imp<-diag(lsa_model$tk%*%s%*%t(s)%*%t(lsa_model$tk))\n    #words<-names(tail(sort(t_imp),25))\n    #dane<-rbind(lsa_model$dk%*%s,lsa_model$tk[words,]%*%s)\n    #d<-dist(dane)\n    #fit9<-hclust(d=d,method=\"ward.D\")\n    #plot(fit9)\n  })\n  \n  LSA<- function(){\n    dtm<-DocumentTermMatrix(korpus, control = list(weighting=weightTfIdf,bounds = list(global = c(input$max))))  \n    txt_mat <- as.textmatrix(t(as.matrix(dtm)))\n    lsa_model <- lsa(txt_mat)\n    lsa_model$tk\n    lsa_model$dk\n    lsa_model&sk\n    s<-matrix(rep(0,16),4,4) #tworzenie macierzy o elementach zerowych\n    diag(s)<-lsa_model$sk\n    d<-dist(lsa_model$dk%*%s)\n    fit5<-hclust(d=d, method=\"ward.D\")\n    return(fit5)\n  }\n  \n  # Porównanie analizy toksonomicznej i LSA \n  output$plottfLSA <- renderPlot({\n    fit1<-TF()\n    fit5<-LSA()\n    dend1<-as.dendrogram(fit1)\n    dend2<-as.dendrogram(fit5)\n    Bk_plot(dend1,dend2,add_E=FALSE,rejection_line_asymptotic=FALSE,main=\"Fowlkes-Mallows Index\", ylab=\"Fowlkes-Mallows Index\")\n  })\n  \n  #Analiza LDA\n  output$plotLDA <- renderPlot({\n    dtm<-DocumentTermMatrix(korpus) #częstotliwość i ilość \n    #v <- terms()\n    n.words <- ncol(dtm)\n    n_group <- 6\n    Ida.model6 <-lda(dtm,k=n_group, method = \"Gibbs\", control = list(burnin = 2000, thin = 100, iter = 3000))\n    perp6 <- perplexity(Ida.model6, dtm)\n    res6 <- posterior(Ida.model6)\n    par(mai = c(1,2,1,1))\n    tl = head(sort(res6$terms[1,],description=TRUE),20)\n    barplot(rev(tl),horiz=TRUE,Ias=1,main=\"Plik1\",xlab = \"Prawdopodob.\")\n  })\n\n}\n",
    "created" : 1498482868317.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1092582095",
    "id" : "6C737145",
    "lastKnownWriteTime" : 1498488532,
    "last_content_update" : -2147483648,
    "path" : "E:/082-word-cloud/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}